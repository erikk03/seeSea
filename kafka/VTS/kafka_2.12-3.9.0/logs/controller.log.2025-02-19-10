[2025-02-19 10:02:12,683] DEBUG [Controller id=0] Delete topics listener fired for topics location_updates to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:12,683] INFO [Controller id=0] Starting topic deletion for topics location_updates (kafka.controller.KafkaController)
[2025-02-19 10:02:12,685] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:12,687] INFO [Topic Deletion Manager 0] Deletion of topic location_updates (re)started (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:12,696] INFO [RequestSendThread controllerId=0] Controller 0 connected to coeus:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-02-19 10:02:12,784] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(location_updates-0 -> NONE) (kafka.controller.KafkaController)
[2025-02-19 10:02:12,786] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=location_updates,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:12,787] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:12,812] INFO [Topic Deletion Manager 0] Deletion of topic location_updates successfully completed (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:12,813] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2025-02-19 10:02:12,814] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:12,985] INFO [Controller id=0] New topics: [Set(location_updates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(location_updates,Some(rI1KFkXvQ-q5WoGpMROI3A),Map(location_updates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-02-19 10:02:12,985] INFO [Controller id=0] New partition creation callback for location_updates-0 (kafka.controller.KafkaController)
[2025-02-19 10:02:37,995] DEBUG [Controller id=0] Delete topics listener fired for topics location_updates to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:37,995] INFO [Controller id=0] Starting topic deletion for topics location_updates (kafka.controller.KafkaController)
[2025-02-19 10:02:37,995] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:37,995] INFO [Topic Deletion Manager 0] Deletion of topic location_updates (re)started (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:38,024] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(location_updates-0 -> NONE) (kafka.controller.KafkaController)
[2025-02-19 10:02:38,024] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=location_updates,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:38,025] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:38,040] INFO [Topic Deletion Manager 0] Deletion of topic location_updates successfully completed (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:38,041] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2025-02-19 10:02:38,042] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:38,129] INFO [Controller id=0] New topics: [Set(location_updates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(location_updates,Some(bNW2hbqJT9SXXVa39-54Gg),Map(location_updates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-02-19 10:02:38,130] INFO [Controller id=0] New partition creation callback for location_updates-0 (kafka.controller.KafkaController)
[2025-02-19 10:02:57,485] DEBUG [Controller id=0] Delete topics listener fired for topics location_updates to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:57,486] INFO [Controller id=0] Starting topic deletion for topics location_updates (kafka.controller.KafkaController)
[2025-02-19 10:02:57,486] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:57,486] INFO [Topic Deletion Manager 0] Deletion of topic location_updates (re)started (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:57,518] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(location_updates-0 -> NONE) (kafka.controller.KafkaController)
[2025-02-19 10:02:57,518] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=location_updates,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:57,518] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:57,541] INFO [Topic Deletion Manager 0] Deletion of topic location_updates successfully completed (kafka.controller.TopicDeletionManager)
[2025-02-19 10:02:57,543] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2025-02-19 10:02:57,544] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:02:57,632] INFO [Controller id=0] New topics: [Set(location_updates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(location_updates,Some(VYgBJnRKRUSQ5FBaubjfNg),Map(location_updates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-02-19 10:02:57,632] INFO [Controller id=0] New partition creation callback for location_updates-0 (kafka.controller.KafkaController)
[2025-02-19 10:04:02,659] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:04:02,659] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:04:02,661] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:04:02,661] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-02-19 10:05:32,257] DEBUG [Controller id=0] Delete topics listener fired for topics location_updates to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:05:32,257] INFO [Controller id=0] Starting topic deletion for topics location_updates (kafka.controller.KafkaController)
[2025-02-19 10:05:32,258] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:05:32,258] INFO [Topic Deletion Manager 0] Deletion of topic location_updates (re)started (kafka.controller.TopicDeletionManager)
[2025-02-19 10:05:32,288] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(location_updates-0 -> NONE) (kafka.controller.KafkaController)
[2025-02-19 10:05:32,288] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=location_updates,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2025-02-19 10:05:32,288] INFO [Topic Deletion Manager 0] Handling deletion for topics location_updates (kafka.controller.TopicDeletionManager)
[2025-02-19 10:05:32,308] INFO [Topic Deletion Manager 0] Deletion of topic location_updates successfully completed (kafka.controller.TopicDeletionManager)
[2025-02-19 10:05:32,309] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2025-02-19 10:05:32,310] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2025-02-19 10:05:32,408] INFO [Controller id=0] New topics: [Set(location_updates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(location_updates,Some(cxkKvp7TS0uCsfS5ekhP6Q),Map(location_updates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-02-19 10:05:32,408] INFO [Controller id=0] New partition creation callback for location_updates-0 (kafka.controller.KafkaController)
[2025-02-19 10:09:03,253] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:09:03,254] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:09:03,255] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:09:03,255] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-02-19 10:14:03,255] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:14:03,255] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:14:03,256] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:14:03,256] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-02-19 10:19:03,257] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:19:03,257] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:19:03,258] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:19:03,258] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-02-19 10:24:03,259] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:24:03,259] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:24:03,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:24:03,260] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-02-19 10:29:03,261] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-02-19 10:29:03,261] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-02-19 10:29:03,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-02-19 10:29:03,262] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
                                                                                                                                                                                                                                                                                                                                                                                                         